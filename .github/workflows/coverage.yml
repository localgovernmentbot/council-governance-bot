name: CouncilBot Coverage

on:
  schedule:
    - cron: '40 2 * * *'  # daily 02:40 UTC
  workflow_dispatch: {}

permissions:
  contents: read
  issues: write

jobs:
  coverage:
    runs-on: ubuntu-latest
    concurrency:
      group: coverage-daily
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install -r requirements.txt

      - name: Run unified scraper
        run: |
          python m9_unified_scraper.py

      - name: Generate coverage report (±30d)
        env:
          FRESH_MINUTES_LAST_DAYS: '30'
          FRESH_AGENDAS_LAST_DAYS: '30'
          FRESH_AGENDAS_NEXT_DAYS: '30'
        run: |
          python scripts/coverage_report.py | tee COVERAGE_SUMMARY.txt

      - name: Open/Update Coverage Issue if gaps detected
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'coverage_summary.json';
            if (!fs.existsSync(path)) {
              core.warning('coverage_summary.json missing');
              return;
            }
            const data = JSON.parse(fs.readFileSync(path, 'utf8'));
            const zero = data.zero_councils || [];
            const title = 'CouncilBot coverage report';
            const body = [
              `Coverage Report (±${data.window_days} days) on ${data.generated_at}`,
              '',
              `Active councils: ${data.active_count}  Zero councils: ${data.zero_count}`,
              '',
              zero.length ? 'Zero-item councils:\n- ' + zero.join('\n- ') : 'All councils returned items in window.'
            ].join('\n');
            // Find existing open issue
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 50,
            });
            const existing = issues.find(i => i.title === title);
            if (existing) {
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existing.number,
                body,
              });
            } else {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                body,
              });
            }

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.run_number }}
          path: |
            m9_scraper_results.json
            coverage_summary.json
            COVERAGE_SUMMARY.txt
          if-no-files-found: error
          retention-days: 14
